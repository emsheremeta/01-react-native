{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { StatusBar } from 'expo-status-bar';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction RegistrationScreen() {\n  var initialState = {\n    email: '',\n    password: ''\n  };\n  var keyboardHide = function keyboardHide() {\n    isShowKeyboard(false);\n    Keyboard.dismiss();\n  };\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isShowKeyboard = _useState2[0],\n    setIsShowKeyboard = _useState2[1];\n  var _useState3 = useState(initialState),\n    _useState4 = _slicedToArray(_useState3, 2),\n    state = _useState4[0],\n    setState = _useState4[1];\n  return _jsx(View, {\n    children: _jsx(KeyboardAvoidingView, {\n      behavior: Platform.OS === 'ios' ? 'padding' : '',\n      children: _jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.titleText,\n          children: \"Register Form\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          textAlign: 'center',\n          placeholder: \"Type login here\",\n          onFocus: function onFocus() {\n            return setIsShowKeyboard(true);\n          },\n          onChangeText: function onChangeText(value) {\n            return setState(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                login: value\n              });\n            });\n          }\n        }), _jsx(TextInput, {\n          style: styles.input,\n          textAlign: 'center',\n          placeholder: \"Type email here\",\n          onFocus: function onFocus() {\n            return setIsShowKeyboard(true);\n          },\n          onChangeText: function onChangeText(value) {\n            return setState(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                email: value\n              });\n            });\n          }\n        }), _jsx(TextInput, {\n          secureTextEntry: true,\n          style: styles.input,\n          textAlign: 'center',\n          placeholder: \"Type password here\",\n          onFocus: function onFocus() {\n            return setIsShowKeyboard(true);\n          },\n          onChangeText: function onChangeText(value) {\n            return setState(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                password: value\n              });\n            });\n          }\n        }), _jsx(TouchableOpacity, {\n          onPress: keyboardHide,\n          children: _jsx(Text, {\n            children: \"Register\"\n          })\n        })]\n      })\n    })\n  });\n}\n;\nvar styles = StyleSheet.create({\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    textAlign: 'center'\n  },\n  titleText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});\nexport default RegistrationScreen;","map":{"version":3,"names":["React","useState","StatusBar","Button","StyleSheet","Text","View","TouchableWithoutFeedback","KeyboardAvoidingView","Platform","TouchableOpacity","Keyboard","TextInput","jsx","_jsx","jsxs","_jsxs","RegistrationScreen","initialState","email","password","keyboardHide","isShowKeyboard","dismiss","_useState","_useState2","_slicedToArray","setIsShowKeyboard","_useState3","_useState4","state","setState","children","behavior","OS","style","styles","titleText","input","textAlign","placeholder","onFocus","onChangeText","value","prevState","_objectSpread","login","secureTextEntry","onPress","create","height","margin","borderWidth","padding","fontSize","fontWeight"],"sources":["C:/Users/42077/Documents/GitHub/01-react-native/react-native-project/Screens/RegistrationScreen.js"],"sourcesContent":["\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { Button, StyleSheet, Text, View, TouchableWithoutFeedback, KeyboardAvoidingView, Platform, TouchableOpacity, Keyboard} from 'react-native';\r\n\r\nimport { TextInput } from \"react-native\";\r\n\r\n function  RegistrationScreen () {\r\n\r\n    const initialState ={\r\n        email: '',\r\n        password: ''\r\n    }\r\nconst keyboardHide = () =>{\r\n  isShowKeyboard(false);\r\n  Keyboard.dismiss()\r\n}\r\n  // const [email, setEmail] = useState(\"\");\r\n  // const [password, setPassword] = useState(\"\");\r\n  // const [login, setLogin] = useState(\"\");\r\n  const [isShowKeyboard, setIsShowKeyboard ] = useState(false)\r\nconst [state, setState] = useState(initialState)\r\n\r\n//   const loginHandler = (login) => setLogin(login);\r\n//   const emailHandler = (email) => setEmail(email);\r\n//   const passwordHandler = (password )=> setPassword(password);\r\n  return (\r\n   <View>\r\n    <KeyboardAvoidingView\r\n      behavior={Platform.OS === 'ios' ? 'padding' : ''}\r\n      > \r\n    {/* додати styles.form : margin bottom : -+ 100 */}\r\n  \r\n      <View>\r\n    <Text  style={styles.titleText} >Register Form</Text>\r\n    <TextInput\r\n      style = {styles.input} textAlign={'center'} \r\n      placeholder='Type login here'\r\n      onFocus={()=>setIsShowKeyboard(true)}\r\n    //   value={login}\r\n      onChangeText={(value) => setState((prevState) => ({...prevState, login: value}))}\r\n      />\r\n      <TextInput\r\n      style = {styles.input} textAlign={'center'} \r\n      placeholder='Type email here'\r\n      onFocus={()=>setIsShowKeyboard(true)}\r\n    //   value={email}\r\n      onChangeText={(value) => setState((prevState) => ({...prevState, email: value}))}\r\n      />\r\n       <TextInput\r\n       secureTextEntry ={true}\r\n         style = {styles.input} textAlign={'center'} \r\n      placeholder='Type password here'\r\n      onFocus={()=>setIsShowKeyboard(true)}\r\n    //   value={password}\r\n    onChangeText={(value) => setState((prevState) => ({...prevState, password: value}))}\r\n      />\r\n      <TouchableOpacity onPress={keyboardHide}>\r\n        <Text >Register</Text>\r\n      </TouchableOpacity>\r\n      </View>\r\n      </KeyboardAvoidingView>\r\n   </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    height: 40,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n    textAlign: 'center'\r\n  },\r\n  titleText: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    textAlign:'center'\r\n\r\n  },\r\n});\r\n\r\nexport default RegistrationScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}