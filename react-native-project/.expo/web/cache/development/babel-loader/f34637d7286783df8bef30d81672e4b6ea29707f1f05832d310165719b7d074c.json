{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { StatusBar } from 'expo-status-bar';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction RegistrationScreen() {\n  var initialState = {\n    email: '',\n    password: ''\n  };\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isShowKeyboard = _useState2[0],\n    setIsShowKeyboard = _useState2[1];\n  var _useState3 = useState(initialState),\n    _useState4 = _slicedToArray(_useState3, 2),\n    state = _useState4[0],\n    setState = _useState4[1];\n  var keyboardHide = function keyboardHide() {\n    setIsShowKeyboard(false);\n    Keyboard.dismiss();\n    console.log(state);\n  };\n  var loginHandler = function loginHandler(login) {\n    return setLogin(login);\n  };\n  return _jsx(View, {\n    children: _jsx(TouchableWithoutFeedback, {\n      onPress: keyboardHide,\n      children: _jsx(KeyboardAvoidingView, {\n        behavior: Platform.OS === 'ios' ? 'padding' : '',\n        children: _jsxs(View, {\n          children: [_jsx(Text, {\n            style: styles.titleText,\n            children: \"Register Form\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            textAlign: 'center',\n            placeholder: \"Type login here\",\n            onFocus: function onFocus() {\n              return setIsShowKeyboard(true);\n            },\n            value: state.login,\n            onChangeText: function onChangeText(value) {\n              return setState(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  login: value\n                });\n              });\n            }\n          }), _jsx(TextInput, {\n            style: styles.input,\n            textAlign: 'center',\n            placeholder: \"Type email here\",\n            onFocus: function onFocus() {\n              return setIsShowKeyboard(true);\n            },\n            value: state.email,\n            onChangeText: function onChangeText(value) {\n              return setState(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  email: value\n                });\n              });\n            }\n          }), _jsx(TextInput, {\n            secureTextEntry: true,\n            style: styles.input,\n            textAlign: 'center',\n            placeholder: \"Type password here\",\n            onFocus: function onFocus() {\n              return setIsShowKeyboard(true);\n            },\n            value: state.password,\n            onChangeText: function onChangeText(value) {\n              return setState(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  password: value\n                });\n              });\n            }\n          }), _jsx(TouchableOpacity, {\n            onPress: keyboardHide,\n            children: _jsx(Text, {\n              children: \"Register\"\n            })\n          })]\n        })\n      })\n    })\n  });\n}\n;\nvar styles = StyleSheet.create({\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    textAlign: 'center'\n  },\n  titleText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});\nexport default RegistrationScreen;","map":{"version":3,"names":["React","useState","StatusBar","Button","StyleSheet","Text","View","TouchableWithoutFeedback","KeyboardAvoidingView","Platform","TouchableOpacity","Keyboard","TextInput","jsx","_jsx","jsxs","_jsxs","RegistrationScreen","initialState","email","password","_useState","_useState2","_slicedToArray","isShowKeyboard","setIsShowKeyboard","_useState3","_useState4","state","setState","keyboardHide","dismiss","console","log","loginHandler","login","setLogin","children","onPress","behavior","OS","style","styles","titleText","input","textAlign","placeholder","onFocus","value","onChangeText","prevState","_objectSpread","secureTextEntry","create","height","margin","borderWidth","padding","fontSize","fontWeight"],"sources":["C:/Users/42077/Documents/GitHub/01-react-native/react-native-project/Screens/RegistrationScreen.js"],"sourcesContent":["\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { Button, StyleSheet, Text, View, TouchableWithoutFeedback, KeyboardAvoidingView, Platform, TouchableOpacity, Keyboard} from 'react-native';\r\n\r\nimport { TextInput } from \"react-native\";\r\n\r\n function  RegistrationScreen () {\r\n\r\n    const initialState ={\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n  // const [email, setEmail] = useState(\"\");\r\n  // const [password, setPassword] = useState(\"\");\r\n  // const [login, setLogin] = useState(\"\");\r\n  const [isShowKeyboard, setIsShowKeyboard ] = useState(false)\r\nconst [state, setState] = useState(initialState)\r\n\r\nconst keyboardHide = () =>{\r\n  setIsShowKeyboard(false);\r\n  Keyboard.dismiss();\r\n  console.log(state)\r\n}\r\n  const loginHandler = (login) => setLogin(login);\r\n//   const emailHandler = (email) => setEmail(email);\r\n//   const passwordHandler = (password )=> setPassword(password);\r\n  return (\r\n   <View>\r\n    <TouchableWithoutFeedback onPress={keyboardHide}>\r\n    <KeyboardAvoidingView\r\n      behavior={Platform.OS === 'ios' ? 'padding' : ''}\r\n      > \r\n    {/* додати styles.form : margin bottom : -+ 100 */}\r\n  \r\n      <View>\r\n    <Text  style={styles.titleText} >Register Form</Text>\r\n    <TextInput\r\n      style = {styles.input} textAlign={'center'} \r\n      placeholder='Type login here'\r\n      onFocus={()=>setIsShowKeyboard(true)}\r\n      value={state.login}// щоб оновити поля після Sing in\r\n      // value={login}\r\n      onChangeText={(value) => setState((prevState) => ({...prevState, login: value}))}\r\n    // onChangeText={loginHandler}\r\n      />\r\n      \r\n      <TextInput\r\n      style = {styles.input} textAlign={'center'} \r\n      placeholder='Type email here'\r\n      onFocus={()=>setIsShowKeyboard(true)}\r\n      value={state.email}\r\n      onChangeText={(value) => setState((prevState) => ({...prevState, email: value}))}\r\n      />\r\n       <TextInput\r\n       secureTextEntry ={true}\r\n         style = {styles.input} textAlign={'center'} \r\n      placeholder='Type password here'\r\n      onFocus={()=>setIsShowKeyboard(true)}\r\n      value={state.password}\r\n    onChangeText={(value) => setState((prevState) => ({...prevState, password: value}))}\r\n      />\r\n      <TouchableOpacity onPress={keyboardHide}>\r\n        <Text >Register</Text>\r\n      </TouchableOpacity>\r\n      </View>\r\n      </KeyboardAvoidingView>\r\n      </TouchableWithoutFeedback>\r\n   </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    height: 40,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n    textAlign: 'center'\r\n  },\r\n  titleText: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    textAlign:'center'\r\n\r\n  },\r\n});\r\n\r\nexport default RegistrationScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}